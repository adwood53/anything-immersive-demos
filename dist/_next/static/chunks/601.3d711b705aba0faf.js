"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[601],{1601:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n(5155),a=n(2115);let o=function(e){let{config:t={}}=e,{position:n="0 0 0",rotation:o="0 0 0",enableWASD:l=!1,enableLook:c=!0,raycastType:s=null}=t,i=(0,a.useRef)(null);return(0,a.useEffect)(()=>{let e=i.current,t=()=>{if(!e){console.warn("Camera entity not found, retrying..."),setTimeout(t,100);return}console.log("Camera entity found, setting up raycasting.");let n=e.querySelector("[raycaster]");n&&(n.parentNode.removeChild(n),console.log("Removed existing raycaster."));let r=document.createElement("a-entity");r.setAttribute("raycaster",{objects:".selectable",far:100,interval:100}),(null==s?void 0:s.includes("gaze"))&&(r.addEventListener("raycaster-intersection",e=>{console.log("Gaze intersection detected with:",e.detail.intersectedEls)}),r.addEventListener("raycaster-intersection-cleared",()=>{console.log("Gaze intersection cleared.")})),(null==s?void 0:s.includes("click"))&&r.addEventListener("click",e=>{console.log("Click detected on:",e.target)}),e.appendChild(r),console.log("Raycaster entity appended.")};return s&&t(),()=>{let e=document.querySelector("[raycaster]");e&&(e.parentNode.removeChild(e),console.log("Cleaned up raycaster."))}},[t]),(0,r.jsx)("a-camera",{camera:"active: true; fov: 75; near: 0.01; far: 1000;",ref:i,position:n,rotation:o,"wasd-controls":"enabled: ".concat(l),"look-controls":"enabled: ".concat(c)})}}}]);