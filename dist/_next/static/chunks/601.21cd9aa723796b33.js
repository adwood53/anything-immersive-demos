(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[601],{176:()=>{AFRAME.components["rotation-offset"]||AFRAME.registerComponent("rotation-offset",{schema:{pitch:{type:"number",default:0},yaw:{type:"number",default:0},roll:{type:"number",default:0}},init:function(){this.el.sceneEl.addEventListener("loaded",()=>{this.applyOffset()})},applyOffset:function(){let e=this.el.getAttribute("rotation"),t=this.data,n={x:e.x+t.pitch,y:e.y+t.yaw,z:e.z+t.roll};this.el.setAttribute("rotation",n)}})},1601:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});var o=n(5155),r=n(2115);n(176);let a=function(e){let{config:t={}}=e,{position:n="0 0 0",rotation:a="0 0 0",enableWASD:l=!1,enableLook:i=!0,raycastType:c=null}=t,s=(0,r.useRef)(null);return(0,r.useEffect)(()=>{let e=s.current,t=()=>{if(!e){console.warn("Camera entity not found, retrying..."),setTimeout(t,100);return}console.log("Camera entity found, setting up raycasting.");let n=e.querySelector("[raycaster]");n&&(n.parentNode.removeChild(n),console.log("Removed existing raycaster."));let o=document.createElement("a-entity");o.setAttribute("raycaster",{objects:".selectable",far:100,interval:100}),(null==c?void 0:c.includes("gaze"))&&(o.addEventListener("raycaster-intersection",e=>{console.log("Gaze intersection detected with:",e.detail.intersectedEls)}),o.addEventListener("raycaster-intersection-cleared",()=>{console.log("Gaze intersection cleared.")})),(null==c?void 0:c.includes("click"))&&o.addEventListener("click",e=>{console.log("Click detected on:",e.target)}),e.appendChild(o),console.log("Raycaster entity appended.")};return c&&t(),()=>{let e=document.querySelector("[raycaster]");e&&(e.parentNode.removeChild(e),console.log("Cleaned up raycaster."))}},[t,c]),(0,o.jsx)("a-camera",{camera:"active: true; fov: 75; near: 0.01; far: 1000;",ref:s,position:n,rotation:a,"wasd-controls":"enabled: ".concat(l),"look-controls":"enabled: ".concat(i),"rotation-offset":!0})}}}]);